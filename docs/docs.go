// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/docker/container-details": {
            "post": {
                "description": "Retrieves a list of running Docker containers for the user associated with the provided session token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "container"
                ],
                "summary": "Get Docker container information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved Docker container details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/server_docker.DockerContainer"
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token or session expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get or parse Docker containers",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticates user against an SSH server and returns a JWT token for subsequent API requests.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Login to SSH and generate JWT token",
                "parameters": [
                    {
                        "description": "SSH login credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.SSHLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in and token generated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "allOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "token": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to connect to SSH server or generate token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/server-details": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves server details using an authenticated SSH session.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "Get server details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Server details",
                        "schema": {
                            "$ref": "#/definitions/server_details.ServerDetails"
                        }
                    },
                    "401": {
                        "description": "Invalid token or session expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get server details",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/server-details/cpu-info": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves CPU information from the server using an authenticated SSH session.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "Get CPU information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CPU information",
                        "schema": {
                            "$ref": "#/definitions/server_details_cpu_info.CPUInfo"
                        }
                    },
                    "401": {
                        "description": "Invalid token or session expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get or parse CPU info",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/server-details/disk-usage": {
            "post": {
                "description": "Retrieves disk usage information for the user associated with the provided session token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "disk"
                ],
                "summary": "Get disk usage information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved disk usage details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/server_details_disk_usage.DiskUsage"
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token or session expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get or parse disk usage",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/server-details/running-processes": {
            "post": {
                "description": "Retrieves a list of running processes for the user associated with the provided session token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Get running processes information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved running processes details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/server_details_running_processes.RunningProcesses"
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token or session expired",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get or parse running processes",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "login.SSHLogin": {
            "type": "object",
            "properties": {
                "ip": {
                    "description": "IP address of the SSH server.",
                    "type": "string"
                },
                "password": {
                    "description": "Password for SSH login.",
                    "type": "string"
                },
                "port": {
                    "description": "Port number for SSH connection (as a string).",
                    "type": "string"
                },
                "username": {
                    "description": "Username for SSH login.",
                    "type": "string"
                }
            }
        },
        "server_details.ServerDetails": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "Hostname of the server",
                    "type": "string"
                },
                "kernel_version": {
                    "description": "Linux kernel version",
                    "type": "string"
                },
                "os": {
                    "description": "Operating system information",
                    "type": "string"
                },
                "uptime": {
                    "description": "CPUModel          string ` + "`" + `json:\"cpu_model\"` + "`" + `          // CPU model and details\nCPULoad           string ` + "`" + `json:\"cpu_load\"` + "`" + `           // Current CPU load\nTotalMemory       string ` + "`" + `json:\"total_memory\"` + "`" + `       // Total memory (RAM)\nUsedMemory        string ` + "`" + `json:\"used_memory\"` + "`" + `        // Used memory (RAM)\nFreeMemory        string ` + "`" + `json:\"free_memory\"` + "`" + `        // Free memory (RAM)\nDiskUsage         string ` + "`" + `json:\"disk_usage\"` + "`" + `         // Disk usage details\nIPAddresses       string ` + "`" + `json:\"ip_addresses\"` + "`" + `       // Server's IP addresses\nNetworkInterfaces string ` + "`" + `json:\"network_interfaces\"` + "`" + ` // Network interfaces information\nOpenPorts         string ` + "`" + `json:\"open_ports\"` + "`" + `         // Open ports on the server",
                    "type": "string"
                }
            }
        },
        "server_details_cpu_info.CPUInfo": {
            "type": "object",
            "properties": {
                "address_sizes": {
                    "type": "string"
                },
                "apicid": {
                    "type": "string"
                },
                "bogomips": {
                    "type": "string"
                },
                "cache_alignment": {
                    "type": "string"
                },
                "cache_size": {
                    "type": "string"
                },
                "clflush_size": {
                    "type": "string"
                },
                "core_id": {
                    "type": "string"
                },
                "cpu_cores": {
                    "type": "string"
                },
                "cpu_family": {
                    "type": "string"
                },
                "cpu_mhz": {
                    "type": "string"
                },
                "cpuid_level": {
                    "type": "string"
                },
                "flags": {
                    "type": "string"
                },
                "fpu": {
                    "type": "string"
                },
                "fpu_exception": {
                    "type": "string"
                },
                "initial_apicid": {
                    "type": "string"
                },
                "microcode": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "model_name": {
                    "type": "string"
                },
                "physical_id": {
                    "type": "string"
                },
                "power_management": {
                    "type": "string"
                },
                "processor": {
                    "type": "string"
                },
                "siblings": {
                    "type": "string"
                },
                "stepping": {
                    "type": "string"
                },
                "vendor_id": {
                    "type": "string"
                },
                "wp": {
                    "type": "string"
                }
            }
        },
        "server_details_disk_usage.DiskUsage": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "string"
                },
                "filesystem": {
                    "type": "string"
                },
                "mounted_on": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "use_percentage": {
                    "type": "string"
                },
                "used": {
                    "type": "string"
                }
            }
        },
        "server_details_running_processes.RunningProcesses": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "cpu_consumption": {
                    "type": "string"
                },
                "process_id": {
                    "type": "string"
                },
                "rss": {
                    "type": "string"
                },
                "started": {
                    "type": "string"
                },
                "stat": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "tty": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "vsz": {
                    "type": "string"
                }
            }
        },
        "server_docker.DockerContainer": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "container_id": {
                    "type": "string"
                },
                "created_on": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "names": {
                    "type": "string"
                },
                "ports": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "cerberus-api-0773eaec6d0f.herokuapp.com",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Cerberus API",
	Description:      "API for Cerberus",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
