basePath: /
definitions:
  login.SSHLogin:
    properties:
      ip:
        description: IP address of the SSH server.
        type: string
      password:
        description: Password for SSH login.
        type: string
      port:
        description: Port number for SSH connection (as a string).
        type: string
      username:
        description: Username for SSH login.
        type: string
    type: object
  server_details.ServerDetails:
    properties:
      hostname:
        description: Hostname of the server
        type: string
      kernel_version:
        description: Linux kernel version
        type: string
      os:
        description: Operating system information
        type: string
      uptime:
        description: |-
          CPUModel          string `json:"cpu_model"`          // CPU model and details
          CPULoad           string `json:"cpu_load"`           // Current CPU load
          TotalMemory       string `json:"total_memory"`       // Total memory (RAM)
          UsedMemory        string `json:"used_memory"`        // Used memory (RAM)
          FreeMemory        string `json:"free_memory"`        // Free memory (RAM)
          DiskUsage         string `json:"disk_usage"`         // Disk usage details
          IPAddresses       string `json:"ip_addresses"`       // Server's IP addresses
          NetworkInterfaces string `json:"network_interfaces"` // Network interfaces information
          OpenPorts         string `json:"open_ports"`         // Open ports on the server
        type: string
    type: object
  server_details_cpu_info.CPUInfo:
    properties:
      address_sizes:
        type: string
      apicid:
        type: string
      bogomips:
        type: string
      cache_alignment:
        type: string
      cache_size:
        type: string
      clflush_size:
        type: string
      core_id:
        type: string
      cpu_cores:
        type: string
      cpu_family:
        type: string
      cpu_mhz:
        type: string
      cpuid_level:
        type: string
      flags:
        type: string
      fpu:
        type: string
      fpu_exception:
        type: string
      initial_apicid:
        type: string
      microcode:
        type: string
      model:
        type: string
      model_name:
        type: string
      physical_id:
        type: string
      power_management:
        type: string
      processor:
        type: string
      siblings:
        type: string
      stepping:
        type: string
      vendor_id:
        type: string
      wp:
        type: string
    type: object
  server_details_disk_usage.DiskUsage:
    properties:
      available:
        type: string
      filesystem:
        type: string
      mounted_on:
        type: string
      size:
        type: string
      use_percentage:
        type: string
      used:
        type: string
    type: object
  server_details_running_processes.RunningProcesses:
    properties:
      command:
        type: string
      cpu_consumption:
        type: string
      process_id:
        type: string
      rss:
        type: string
      started:
        type: string
      stat:
        type: string
      time:
        type: string
      tty:
        type: string
      user:
        type: string
      vsz:
        type: string
    type: object
  server_docker.DockerContainer:
    properties:
      command:
        type: string
      container_id:
        type: string
      created_on:
        type: string
      image:
        type: string
      names:
        type: string
      ports:
        type: string
      status:
        type: string
    type: object
host: cerberus-api-0773eaec6d0f.herokuapp.com
info:
  contact: {}
  description: API for Cerberus
  title: Cerberus API
  version: 1.0.0
paths:
  /docker/container-details:
    post:
      consumes:
      - application/json
      description: Retrieves a list of running Docker containers for the user associated
        with the provided session token.
      parameters:
      - description: Bearer token for authentication
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved Docker container details
          schema:
            items:
              $ref: '#/definitions/server_docker.DockerContainer'
            type: array
        "401":
          description: Invalid token or session expired
          schema:
            type: string
        "500":
          description: Failed to get or parse Docker containers
          schema:
            type: string
      summary: Get Docker container information
      tags:
      - container
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates user against an SSH server and returns a JWT token
        for subsequent API requests.
      parameters:
      - description: SSH login credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/login.SSHLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in and token generated
          schema:
            additionalProperties:
              allOf:
              - type: string
              - properties:
                  token:
                    type: string
                type: object
            type: object
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to connect to SSH server or generate token
          schema:
            type: string
      summary: Login to SSH and generate JWT token
      tags:
      - authentication
  /server-details:
    post:
      consumes:
      - application/json
      description: Retrieves server details using an authenticated SSH session.
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Server details
          schema:
            $ref: '#/definitions/server_details.ServerDetails'
        "401":
          description: Invalid token or session expired
          schema:
            type: string
        "500":
          description: Failed to get server details
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get server details
      tags:
      - server
  /server-details/cpu-info:
    post:
      consumes:
      - application/json
      description: Retrieves CPU information from the server using an authenticated
        SSH session.
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: CPU information
          schema:
            $ref: '#/definitions/server_details_cpu_info.CPUInfo'
        "401":
          description: Invalid token or session expired
          schema:
            type: string
        "500":
          description: Failed to get or parse CPU info
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get CPU information
      tags:
      - server
  /server-details/disk-usage:
    post:
      consumes:
      - application/json
      description: Retrieves disk usage information for the user associated with the
        provided session token.
      parameters:
      - description: Bearer token for authentication
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved disk usage details
          schema:
            items:
              $ref: '#/definitions/server_details_disk_usage.DiskUsage'
            type: array
        "401":
          description: Invalid token or session expired
          schema:
            type: string
        "500":
          description: Failed to get or parse disk usage
          schema:
            type: string
      summary: Get disk usage information
      tags:
      - disk
  /server-details/running-processes:
    post:
      consumes:
      - application/json
      description: Retrieves a list of running processes for the user associated with
        the provided session token.
      parameters:
      - description: Bearer token for authentication
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved running processes details
          schema:
            items:
              $ref: '#/definitions/server_details_running_processes.RunningProcesses'
            type: array
        "401":
          description: Invalid token or session expired
          schema:
            type: string
        "500":
          description: Failed to get or parse running processes
          schema:
            type: string
      summary: Get running processes information
      tags:
      - process
swagger: "2.0"
